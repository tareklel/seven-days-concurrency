Day 1
Usually when I grasp a concept I really enjoy if I don't practice it for a specific period, I'll forget it. 
So I've decided to talk about concurrency in programming for 7 days for it to stick. Why is concurrency amazing? 
Below are two pieces of code that do the same thing, read webpages, but one take 0.9-1.6 seconds to run while the other takes 5-6 seconds to run. 
The first one runs 5 times as fast because of concurrency, a significant performance boost. 
How was this achieved? 
In the first piece of code, multiple execution flows called threads execute functions to read websites 
concurrently without having to wait for previous functions to complete the entirety of their task. 
Since they're not waiting on external events to complete, such as waiting for a response from a website, a new task can start and exevute code in the meantime. 
So overall more gets done when waiting time is put to good use! Tomorrow I'll talk about where concurrency can go wrong.

#7daysofconcurrency #day1

Day 2 of 7 Days of Concurrency: Running threads concurrently speeds up performance, but this gain in performance comes with its own set of risks. 
Consider having a bunch of threads accessing and changing a block of data concurrently. 
Because the thread scheduling algorithm can swap between threads at any time, 
there is a chance that the program produces undesirable results such as when a thread reads data before another thread completes writing changes to that data.  
This is known as race conditions. Therefore threads need to let each other know that they are still going at a task and that other threads should wait. 
Once solution to this are semaphores, an abstract data type that can be used for signaling whether a resource can be accessed. 
In the below code multiple-threads are used to increment values to a global variable, 
semaphores are acquired while a thread is incrementing to the variable and then released so that other threads can start incrementing. 
Unfortunately semaphores do not solve all of the challenges that come with concurrency and they even create new ones. 
Tomorrow we will discuss other ways to safely exchange data between threads.

try it out yourself here:

https://lnkd.in/dTVUbCD

#7daysofconcurrency #day2 #programming #python
